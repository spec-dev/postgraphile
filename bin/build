#!/bin/bash

# --- Build the postgraphile server docker image --- #

set -e # exit if any child script exits with non-zero status

# ======== PARSE ARGS ======== #

this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
project_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"
env="$1"

# ======== VALIDATE ARGS ======== #

$this_dir/validate_arg "env" "$env" "dev|staging|prod"

# ======== SET KEY VARS ======== #

aws_account_id=$( $this_dir/env_reader "$env" "AWS_ACCOUNT_ID" )
aws_region=$( $this_dir/env_reader "$env" "AWS_REGION" )
image_org=$( $this_dir/env_reader "$env" "DOCKER_IMAGE_ORG" )
image_name=$( $this_dir/env_reader "$env" "DOCKER_IMAGE_NAME" )
image_repo="$image_org/$image_name"
image_version=$( $this_dir/latest_sha )
image="$image_repo:$image_version"
registry_image="$aws_account_id.dkr.ecr.$aws_region.amazonaws.com/$image"

# ======== VALIDATE REQUIRED VARS ======== #

$this_dir/assert_env "AWS_ACCOUNT_ID" "$aws_account_id"
$this_dir/assert_env "AWS_REGION" "$aws_region"
$this_dir/assert_env "DOCKER_IMAGE_ORG" "$image_org"
$this_dir/assert_env "DOCKER_IMAGE_NAME" "$image_name"

# ======== BUILD IMAGE ======== #

# Enter the project directory.
cd "$project_dir"

# Build and tag the image.
docker buildx build --platform linux/amd64 -t "$image" .
docker tag "$image" "$registry_image"

echo "Successfully built image $registry_image"